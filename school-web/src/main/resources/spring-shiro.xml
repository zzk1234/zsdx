<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	
	<!-- 缓存管理器 使用Ehcache实现 -->
	<bean id="shiroEncacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml" />
		<!-- property name="cacheManager" ref="ehCacheManager" /-->
	</bean>
	<!-- 
	<bean id="ehCacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		p:configLocation="classpath:ehcache-shiro.xml" p:shared="true" />
	 -->
    
    
    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="180000"/>
    </bean>
    
    
    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    
    <!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<property name="interval" value="600000" />	<!--毫秒，检测时间间距，默认是60分钟 -->
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	
	<!-- 会话监听器 -->
	<bean id="MySessionListener" class="com.zd.core.security.MySessionListener"></bean>
		
	<!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <!-- session 监听，可以多个。 -->
		<property name="sessionListeners">
			<list>
				<ref bean="MySessionListener"/>
	        </list> 		
		</property>
    </bean>
    
    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="shiroSecurityRealm" /> <!-- 从Realm获取安全数据（如用户、角色、权限） -->
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="shiroEncacheManager"/>
    </bean>
    
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	
    <!-- kickoutSessionControlFilter用于控制并发登录人数的  -->
	<bean id="kickoutSessionControlFilter"
		class="com.zd.core.security.KickoutSessionControlFilter">
		<property name="cacheManager" ref="shiroEncacheManager" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="kickoutAfter" value="false" />
		<property name="maxSession" value="1" />
		<property name="kickoutUrl" value="/login/desktop?kickout=1" />
	</bean>
    
    
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login.jsp"/>
        <property name="successUrl" value="/login/desktop"/>
        <property name="unauthorizedUrl" value="/login/callUnauthorized"/>
        <property name="filters">
            <util:map>
                <!-- 重写了这个验证的过滤器 -->
				<entry key="authc">
					<bean class="com.zd.core.security.AjaxRequestAuthorizationFilter" />
				</entry>
				
				<!-- 登录人数控制的过滤器 -->
				<entry key="kickout" value-ref="kickoutSessionControlFilter"/> 
				
            </util:map>
        </property>
        <property name="filterChainDefinitions">
			<value>
				/SysAppinfo/** = anon
				/static/** = anon
				/index.jsp = anon
				/login.jsp = anon
				/handcourse.jsp = anon
				/login/login = anon
				/verifycode/image = anon
				/verifycode/check=anon
				/app/**=anon
				/login/logout = logout
				/login/getOnlineCount=anon
				/DocTSenddoc/doUpload = anon
				/DocTSenddoc/downLoadFile = anon
				/ModelFactory/getModelFields = anon
				/BaseDicitem/getDicItemByDicCode = anon		
				/** = kickout,authc
			</value>
		</property>
    </bean>
    
    <!-- Post processor that automatically invokes init() and destroy() methods -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>

	